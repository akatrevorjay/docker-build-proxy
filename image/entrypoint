#!/bin/bash
set -eo pipefail
[[ -z "$DEBUG" ]] || set -xv

if [[ "$CONFIG_DIR" != "/etc/squid3" && -d "/etc/squid3" ]]; then
    echo "[$0] Setting CONFIG_DIR=$CONFIG_DIR"
    mv /etc/squid3 /etc/squid3.dist
    ln -sf "$CONFIG_DIR" "/etc/squid3"
fi

if [[ ! -f "$CONFIG_DIR/squid.conf" ]]; then
    echo "[$0] Creating $CONFIG_DIR/squid.conf from template $APP_ROOT/image/squid.conf.tmpl"
    dockerize \
        -template "$APP_ROOT/image/squid.conf.tmpl":"$CONFIG_DIR/squid.conf"
fi

if [[ ! -d "$CACHE_DIR/00" ]]; then
    echo "[$0] Creating CACHE_DIR=$CACHE_DIR"
    $SQUID3 -N -z
fi

if [[ -n "$SSL_BUMP_PORT" ]]; then
    : "${SSL_INFO:="US\nOhio\nCleveland\nSkyWWW\nEngineering\n$HOSTNAME\n\n"}"

    if [[ ! -f "$SSL_CERT" && ! -f "$SSL_KEY" ]]; then
        echo "[$0] Generating SSL cert=$SSL_CERT key=$SSL_KEY"
        echo -e "$SSL_INFO" \
            | openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout "$SSL_KEY" -out "$SSL_CERT"
        echo
    elif [[ ! -f "$SSL_CERT" || ! -f "$SSL_KEY" ]]; then
        echo "ERROR: Missing either $SSL_CERT or $SSL_KEY" >&2
        exit 1
    fi

    echo "[$0] Public cert follows:"
    cat "$SSL_CERT"
    echo
fi

echo "exec:" "$@"
exec "$@"

